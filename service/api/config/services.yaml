# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    avatar_directory: 'avatar'
    photos_directory: 'photos'
    uploads_directory: 'uploads'
    uploads_service_type: '%env(UPLOAD_SERVICE_TYPE)%'
    aws_s3_bucket_name: '%env(AWS_S3_BUCKET_NAME)%'
    aws_s3_region: '%env(AWS_S3_REGION)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\FileUploader\FileUploaderFactory:
        arguments:
            $uploadServiceType: '%uploads_service_type%'
            $targetDirectory: '%uploads_directory%'
            $requestStack: '@request_stack'
            $params: '@parameter_bag'

    App\Service\FileUploader\FileUploaderInterface:
        factory: ['@App\Service\FileUploader\FileUploaderFactory', 'create']

    App\EventSubscriber\UserSubscriber:
        tags:
            - { name: kernel.event_subscriber }

    Aws\S3\S3Client:
        arguments:
            - version: 'latest'
              region: '%env(AWS_S3_REGION)%'
              credentials:
                  key: '%env(AWS_S3_ACCESS_ID)%'
                  secret: '%env(AWS_S3_ACCESS_SECRET)%'
